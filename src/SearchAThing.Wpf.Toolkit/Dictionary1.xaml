<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SearchAThing.Wpf.Toolkit"
                    xmlns:sciGUI="clr-namespace:SearchAThing.Sci.GUI;assembly=SearchAThing.Sci.GUI">

    <!-- converters -->
    <local:BoolInvertConverter x:Key="BoolInvertConverter"/>
    <local:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
    <local:MathOpConverter x:Key="MathOpConverter"/>
    <local:MathOpConverterMulti x:Key="MathOpConverterMulti"/>
    <local:ObjectNullBoolConverter x:Key="ObjectNullBoolConverter"/>
    <local:ObjectNullVisibilityConverter x:Key="ObjectNullVisibilityConverter"/>
    <local:StringNullOrEmptyConverter x:Key="StringNullOrEmptyConverter"/>
    <sciGUI:MeasureTextConverter x:Key="MeasureTextConverter"/>

    <!-- brushes -->
    <SolidColorBrush x:Key="Brush1" Color="#FF3383B9"/>
    <SolidColorBrush x:Key="Brush2" Color="#FF33B99B"/>
    <SolidColorBrush x:Key="Brush3" Color="#FFEC961A"/>
    <SolidColorBrush x:Key="Brush4" Color="#FFFF4B39"/>
    <SolidColorBrush x:Key="Brush5" Color="#FFFFE77D"/>

    <!-- tab control margin 
    <Style TargetType="TabControl">
        <Setter Property="Margin" Value="5"/>
    </Style>-->

    <!-- user control default background -->
    <Style TargetType="UserControl">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    </Style>

    <!-- hyperlink button -->
    <Style x:Key="HyperlinkTextBlk" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush1}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="IsHitTestVisible" Value="True"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".2"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- button -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Brush1}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Border x:Name="innerBorder" CornerRadius="2" BorderThickness="1" Margin="2" BorderBrush="White" Visibility="{Binding IsDefault, Converter={StaticResource BoolVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsDefault" Value="true">
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->                             
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Form Label -->
    <Style x:Key="FormLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

</ResourceDictionary>